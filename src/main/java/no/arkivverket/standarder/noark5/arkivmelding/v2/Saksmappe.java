//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package no.arkivverket.standarder.noark5.arkivmelding.v2;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;

import javax.xml.datatype.XMLGregorianCalendar;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;


/**
 * <p>Java class for saksmappe complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="saksmappe">
 *   <complexContent>
 *     <extension base="{http://www.arkivverket.no/standarder/noark5/arkivmelding}mappe">
 *       <sequence>
 *         <element name="saksaar" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}saksaar" minOccurs="0"/>
 *         <element name="sakssekvensnummer" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}sakssekvensnummer" minOccurs="0"/>
 *         <element name="saksdato" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}saksdato" minOccurs="0"/>
 *         <element name="administrativEnhet" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}administrativEnhet" minOccurs="0"/>
 *         <element name="saksansvarlig" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}saksansvarlig" minOccurs="0"/>
 *         <element name="journalenhet" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}journalenhet" minOccurs="0"/>
 *         <element name="saksstatus" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}saksstatus" minOccurs="0"/>
 *         <element name="utlaantDato" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}utlaantDato" minOccurs="0"/>
 *         <element name="utlaantTil" type="{http://www.arkivverket.no/standarder/noark5/metadatakatalog}utlaantTil" minOccurs="0"/>
 *         <element name="presedens" type="{http://www.arkivverket.no/standarder/noark5/arkivmelding}presedens" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "saksmappe", propOrder = {
    "saksaar",
    "sakssekvensnummer",
    "saksdato",
    "administrativEnhet",
    "saksansvarlig",
    "journalenhet",
    "saksstatus",
    "utlaantDato",
    "utlaantTil",
    "presedens"
})
public class Saksmappe
    extends Mappe
{

    protected BigInteger saksaar;
    protected BigInteger sakssekvensnummer;
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar saksdato;
    protected String administrativEnhet;
    protected String saksansvarlig;
    protected String journalenhet;
    protected String saksstatus;
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar utlaantDato;
    protected String utlaantTil;
    protected List<Presedens> presedens;

    @Override
    public Saksmappe useRegistrering(Collection<Registrering> values) {
        if (values!= null) {
            getRegistrering().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useRegistrering(Registrering... values) {
        if (values!= null) {
            for (Registrering value: values) {
                getRegistrering().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useMappe(Collection<Mappe> values) {
        if (values!= null) {
            getMappe().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useMappe(Mappe... values) {
        if (values!= null) {
            for (Mappe value: values) {
                getMappe().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useKlasse(Collection<Klasse> values) {
        if (values!= null) {
            getKlasse().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useKlasse(Klasse... values) {
        if (values!= null) {
            for (Klasse value: values) {
                getKlasse().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useGradering(Gradering value) {
        setGradering(value);
        return this;
    }

    @Override
    public Saksmappe useSkjerming(Skjerming value) {
        setSkjerming(value);
        return this;
    }

    @Override
    public Saksmappe useMerknad(Collection<Merknad> values) {
        if (values!= null) {
            getMerknad().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useMerknad(Merknad... values) {
        if (values!= null) {
            for (Merknad value: values) {
                getMerknad().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useKryssreferanse(Collection<Kryssreferanse> values) {
        if (values!= null) {
            getKryssreferanse().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useKryssreferanse(Kryssreferanse... values) {
        if (values!= null) {
            for (Kryssreferanse value: values) {
                getKryssreferanse().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe usePart(Collection<Part> values) {
        if (values!= null) {
            getPart().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe usePart(Part... values) {
        if (values!= null) {
            for (Part value: values) {
                getPart().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useVirksomhetsspesifikkeMetadata(Object value) {
        setVirksomhetsspesifikkeMetadata(value);
        return this;
    }

    @Override
    public Saksmappe useReferanseArkivdel(Collection<String> values) {
        if (values!= null) {
            getReferanseArkivdel().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useReferanseArkivdel(String... values) {
        if (values!= null) {
            for (String value: values) {
                getReferanseArkivdel().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useAvsluttetAv(String value) {
        setAvsluttetAv(value);
        return this;
    }

    @Override
    public Saksmappe useAvsluttetDato(XMLGregorianCalendar value) {
        setAvsluttetDato(value);
        return this;
    }

    @Override
    public Saksmappe useOpprettetAv(String value) {
        setOpprettetAv(value);
        return this;
    }

    @Override
    public Saksmappe useOpprettetDato(XMLGregorianCalendar value) {
        setOpprettetDato(value);
        return this;
    }

    @Override
    public Saksmappe useOppbevaringssted(Collection<String> values) {
        if (values!= null) {
            getOppbevaringssted().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useOppbevaringssted(String... values) {
        if (values!= null) {
            for (String value: values) {
                getOppbevaringssted().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useDokumentmedium(String value) {
        setDokumentmedium(value);
        return this;
    }

    @Override
    public Saksmappe useNoekkelord(Collection<String> values) {
        if (values!= null) {
            getNoekkelord().addAll(values);
        }
        return this;
    }

    @Override
    public Saksmappe useNoekkelord(String... values) {
        if (values!= null) {
            for (String value: values) {
                getNoekkelord().add(value);
            }
        }
        return this;
    }

    @Override
    public Saksmappe useBeskrivelse(String value) {
        setBeskrivelse(value);
        return this;
    }

    @Override
    public Saksmappe useOffentligTittel(String value) {
        setOffentligTittel(value);
        return this;
    }

    @Override
    public Saksmappe useTittel(String value) {
        setTittel(value);
        return this;
    }

    @Override
    public Saksmappe useReferanseForeldermappe(String value) {
        setReferanseForeldermappe(value);
        return this;
    }

    @Override
    public Saksmappe useMappeID(String value) {
        setMappeID(value);
        return this;
    }

    @Override
    public Saksmappe useSystemID(String value) {
        setSystemID(value);
        return this;
    }

    /**
     * Gets the value of the saksaar property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSaksaar() {
        return saksaar;
    }

    /**
     * Sets the value of the saksaar property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSaksaar(BigInteger value) {
        this.saksaar = value;
    }

    public Saksmappe useSaksaar(BigInteger value) {
        setSaksaar(value);
        return this;
    }

    /**
     * Gets the value of the sakssekvensnummer property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSakssekvensnummer() {
        return sakssekvensnummer;
    }

    /**
     * Sets the value of the sakssekvensnummer property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSakssekvensnummer(BigInteger value) {
        this.sakssekvensnummer = value;
    }

    public Saksmappe useSakssekvensnummer(BigInteger value) {
        setSakssekvensnummer(value);
        return this;
    }

    /**
     * Gets the value of the saksdato property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getSaksdato() {
        return saksdato;
    }

    /**
     * Sets the value of the saksdato property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setSaksdato(XMLGregorianCalendar value) {
        this.saksdato = value;
    }

    public Saksmappe useSaksdato(XMLGregorianCalendar value) {
        setSaksdato(value);
        return this;
    }

    /**
     * Gets the value of the administrativEnhet property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAdministrativEnhet() {
        return administrativEnhet;
    }

    /**
     * Sets the value of the administrativEnhet property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAdministrativEnhet(String value) {
        this.administrativEnhet = value;
    }

    public Saksmappe useAdministrativEnhet(String value) {
        setAdministrativEnhet(value);
        return this;
    }

    /**
     * Gets the value of the saksansvarlig property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSaksansvarlig() {
        return saksansvarlig;
    }

    /**
     * Sets the value of the saksansvarlig property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSaksansvarlig(String value) {
        this.saksansvarlig = value;
    }

    public Saksmappe useSaksansvarlig(String value) {
        setSaksansvarlig(value);
        return this;
    }

    /**
     * Gets the value of the journalenhet property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJournalenhet() {
        return journalenhet;
    }

    /**
     * Sets the value of the journalenhet property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setJournalenhet(String value) {
        this.journalenhet = value;
    }

    public Saksmappe useJournalenhet(String value) {
        setJournalenhet(value);
        return this;
    }

    /**
     * Gets the value of the saksstatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSaksstatus() {
        return saksstatus;
    }

    /**
     * Sets the value of the saksstatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSaksstatus(String value) {
        this.saksstatus = value;
    }

    public Saksmappe useSaksstatus(String value) {
        setSaksstatus(value);
        return this;
    }

    /**
     * Gets the value of the utlaantDato property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getUtlaantDato() {
        return utlaantDato;
    }

    /**
     * Sets the value of the utlaantDato property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setUtlaantDato(XMLGregorianCalendar value) {
        this.utlaantDato = value;
    }

    public Saksmappe useUtlaantDato(XMLGregorianCalendar value) {
        setUtlaantDato(value);
        return this;
    }

    /**
     * Gets the value of the utlaantTil property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUtlaantTil() {
        return utlaantTil;
    }

    /**
     * Sets the value of the utlaantTil property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUtlaantTil(String value) {
        this.utlaantTil = value;
    }

    public Saksmappe useUtlaantTil(String value) {
        setUtlaantTil(value);
        return this;
    }

    /**
     * Gets the value of the presedens property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the presedens property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPresedens().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Presedens }
     * 
     * 
     * @return
     *     The value of the presedens property.
     */
    public List<Presedens> getPresedens() {
        if (presedens == null) {
            presedens = new ArrayList<>();
        }
        return this.presedens;
    }

    public Saksmappe usePresedens(Collection<Presedens> values) {
        if (values!= null) {
            getPresedens().addAll(values);
        }
        return this;
    }

    public Saksmappe usePresedens(Presedens... values) {
        if (values!= null) {
            for (Presedens value: values) {
                getPresedens().add(value);
            }
        }
        return this;
    }

}
